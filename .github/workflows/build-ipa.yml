name: Build iOS IPA

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build_ios:
    name: Build iOS IPA
    runs-on: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Get version from package.json
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install iOS Simulator
        run: |
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
          xcrun simctl list runtimes

      - name: Prebuild iOS project
        run: pnpm prebuild-ios

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Create iOS keychain and import certificates
        env:
          IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain

          # Import certificate
          echo "$IOS_CERTIFICATE_BASE64" | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain

          # Install provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$IOS_PROVISIONING_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      - name: Build iOS Archive
        run: |
          cd ios
          xcodebuild -workspace hotlistapp.xcworkspace \
            -scheme hotlistapp \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath hotlistapp.xcarchive \
            archive

      - name: Export IPA
        run: |
          cd ios
          # Create export options plist
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>ad-hoc</string>
            <key>teamID</key>
            <string>\${{ secrets.IOS_TEAM_ID }}</string>
            <key>compileBitcode</key>
            <false/>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <false/>
          </dict>
          </plist>
          EOF

          # Export IPA
          xcodebuild -exportArchive \
            -archivePath hotlistapp.xcarchive \
            -exportPath export \
            -exportOptionsPlist ExportOptions.plist

      - name: Rename IPA file
        run: |
          mkdir -p artifacts
          cp ios/export/hotlistapp.ipa artifacts/hotListApp.${{ steps.package-version.outputs.version }}.ipa

      - name: Create Release and Upload IPA
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ios-v${{ steps.package-version.outputs.version }}
          name: iOS Release v${{ steps.package-version.outputs.version }}
          body: Automated iOS release for version v${{ steps.package-version.outputs.version }}.
          draft: false
          prerelease: false
          files: artifacts/hotListApp.${{ steps.package-version.outputs.version }}.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up keychain
        if: always()
        run: |
          security delete-keychain build.keychain || true